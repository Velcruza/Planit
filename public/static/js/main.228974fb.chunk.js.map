{"version":3,"sources":["components/UserProfile.js","components/Card.js","components/Wheel.js","components/FindCreateGroup.js","components/useScrollBlock.js","components/HomePage.js","components/AddEventForm.js","components/EventDetails.js","components/DisplayCalendar.js","components/UserList.js","components/Message.js","components/GroupPage.js","components/LoggedIn.js","components/LandingPage.js","components/Login.js","components/Signup.js","components/LoggedOut.js","App.js","reportWebVitals.js","index.js"],"names":["UserProfile","show","setShow","currentUser","setCurrentUser","setUserName","setProfPic","useState","showDelete","setShowDelete","username","bio","profile_picture","formData","setFormData","handleClose","handleDeleteClose","handleDeleteProfile","profile","fetch","id","method","then","res","ok","json","errors","alert","handleFormChange","e","target","value","Modal","onHide","Header","closeButton","Title","Form","onSubmit","preventDefault","configObj","headers","body","JSON","stringify","data","handleSubmit","Group","style","padding","onChange","Label","marginTop","marginLeft","Control","type","Footer","Button","variant","onClick","Body","float","styles","card","margin","width","height","borderRadius","position","left","top","transform","backgroundColor","Card","props","radian_interval","radius","coord","x","Math","cos","y","sin","history","useNavigate","server","center","localStorage","setItem","className","alt","src","group_picture","title","name","Wheel","handle_scroll","event","clearTimeout","anim_id","wheel","temp_theta","deltaY","setTimeout","setState","theta","state","cards","center_of_wheel","parseFloat","this","temp_cards","servers","array","setGroupId","i","push","PI","onMouseEnter","blockScroll","onMouseLeave","allowScroll","onWheel","ref","ref_id","React","Component","marginBottom","backgroundImage","backgroundAttachment","backgroundPosition","backgroundRepeat","backgroundSize","FindCreateGroup","searchGroup","setSearchGroup","htmlFor","placeholder","error","console","log","safeDocument","document","HomePage","allGroups","setAllGroups","groupModal","setGroupModal","scrollBlocked","useRef","html","documentElement","getElementsByClassName","setScrollBool","current","scrollBarWidth","window","innerWidth","clientWidth","bodyPaddingRight","parseInt","getComputedStyle","getPropertyValue","overflow","paddingRight","useScrollBlock","userName","profPic","useEffect","all_groups","systems","map","collection","to","textDecoration","color","fontSize","marginRight","AddEventForm","eventLength","showAdd","setShowAdd","handleNewEventSubmit","adminGroups","user_id","group_id","start","end","desc","all_day","multiDay","setMultiDay","startTime","setStartTime","endTime","setEndTime","isGroup","setIsGroup","startDay","Date","setHours","endDay","setDate","getDate","inputTime","currentDay","timeInHours","startRef","getTime","hex","groupOptions","group","step","handleStartTime","handleEndTime","Text","muted","onChangeComplete","Check","inline","label","disabled","defaultChecked","Select","EventDetails","handleEditSubmit","handleDeleteEvent","showEdit","setShowEdit","editDate","setEditDate","handleEditClose","toUTCString","slice","localizer","momentLocalizer","moment","DisplayCalendar","selected","setSelected","allEvents","setAllEvents","personalEvents","setPersonalEvents","groupEvents","setGroupEvents","filterToggle","setFilterToggle","selectedEvents","setSelectedEvents","showDetails","setShowDetails","setAdminGroups","all_events","personal","all","admins","showEvents","HomeIcon","SvgIcon","d","Fab","size","Stack","direction","spacing","alignItems","justifyContent","ToggleButtonGroup","exclusive","handleFilterToggle","ToggleButton","events","startAccessor","endAccessor","defaultView","Views","MONTH","onSelectEvent","eventPropGetter","resp","newGroupEvents","newAllEvents","newPersonalEvents","deletedAllArray","filter","deletedGroupArray","deletedPersonalArray","UserList","serverList","user","userData","setUserData","birthday","Message","message","groupID","GroupPage","groupData","setGroupData","isJoined","setIsJoined","messages","setMessages","getItem","user_bool","setValue","userArray","all_users","messageArray","textAlign","TextField","fullWidth","multiline","maxRows","onKeyPress","ev","key","messageObj","bottom","LoggedIn","groupId","path","element","LandingPage","Login","password","Container","component","maxWidth","CssBaseline","Box","sx","display","flexDirection","Avatar","m","bgcolor","Typography","noValidate","mt","required","autoComplete","mb","Grid","container","item","Link","href","Signup","password_confirmation","handleChange","xs","LoggedOut","App","authenticated","setAuthenticated","credentials","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createTheme","ReactDOM","render","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.228974fb.chunk.js","sourcesContent":["import Modal from \"react-bootstrap/Modal\";\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport { useState } from \"react\";\n\nfunction UserProfile ({show, setShow, currentUser, setCurrentUser, setUserName, setProfPic}) {\n    const [showDelete, setShowDelete] = useState(false)\n    const [formData, setFormData] = useState({\n        username: currentUser.username,\n        bio: currentUser.bio,\n        profile_picture: currentUser.profile_picture\n    })\n    const handleClose = () => {\n        setShow(false)\n        setFormData({\n            username: currentUser.username,\n            bio: currentUser.bio,\n            profile_picture: currentUser.profile_picture\n        })\n    };\n    function handleSubmit (e) {\n        e.preventDefault()\n        const configObj = {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(formData)\n        }\n        fetch(`/users/${currentUser.id}`, configObj)\n        .then(res => res.json())\n        .then(data => {\n            setFormData({\n            username: data.username,\n            bio: data.bio,\n            profile_picture: data.profile_picture\n             })\n            setUserName(data.username)\n            setProfPic(data.profile_picture)\n            setShow(false)\n        })\n    }\n    const handleDeleteClose = () => setShowDelete(false)\n    const handleDeleteClick = () => {\n        setShow(false)\n        setShowDelete(true)\n    }\n    const handleDelete = () => {\n        handleDeleteProfile(currentUser)\n        setShowDelete(false)\n    }\n    const handleDeleteProfile = (profile) => {\n        fetch(`/users/${profile.id}`, {method: 'DELETE'}).then(res => {\n            if(res.ok) {\n                setCurrentUser(null)\n                fetch('/logout', { method: 'DELETE' })\n            } else {\n                res.json().then((errors) => {\n                    alert(errors.errors);\n                })\n            }\n        })\n    }\n    function handleFormChange(e) {\n        setFormData({...formData, [e.target.id]: e.target.value})\n    }\n\n    return(\n        <div>\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Edit {currentUser.username}'s Profile</Modal.Title>\n                </Modal.Header>\n                <Form onSubmit={(e) => handleSubmit(e)}>\n                <Form.Group style={{padding: 10}} onChange={handleFormChange}>\n                    <Form.Label style={{marginTop: 5, marginLeft: 10}}>Username</Form.Label>\n                    <Form.Control type=\"text\" id=\"username\" value={formData.username} onChange={handleFormChange}/>\n                    <Form.Label style={{marginTop: 5, marginLeft: 10}}>Bio</Form.Label>\n                    <Form.Control type=\"text\" id=\"bio\" value={formData.bio} onChange={handleFormChange}/>\n                    <Form.Label style={{marginTop: 5, marginLeft: 10}}>Profile Picture</Form.Label>\n                    <Form.Control type=\"text\" id=\"profile_picture\" value={formData.profile_picture} onChange={handleFormChange}/>\n                    <Modal.Footer>\n                        <Button variant=\"danger\" onClick={handleDeleteClick}>\n                        Delete Account\n                        </Button>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                        Cancel\n                        </Button>\n                        <Button variant=\"success\" type=\"submit\">\n                        Confirm\n                        </Button>\n                    </Modal.Footer>\n                </Form.Group>\n                </Form>\n            </Modal>\n\n            <Modal show={showDelete} onHide={handleDeleteClose}>\n            <Modal.Header closeButton>\n            <Modal.Title>Are you sure you wish to delete ?</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n            <Button variant=\"secondary\" onClick={handleDeleteClose}>\n                Cancel\n            </Button>\n            <Button variant=\"danger\" onClick={handleDelete} style={{float: 'right'}}>\n                Delete\n            </Button>\n            </Modal.Body>\n            </Modal>\n        </div>\n    )\n}\n\nexport default UserProfile","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nfunction get_coords(radian_interval, radius) {\n    return {\n        x: Math.cos(radian_interval) * radius,\n        y: Math.sin(radian_interval) * radius\n    }\n}\n\nfunction Card(props) {\n    let coord = get_coords(props.radian_interval, props.radius);\n    let history = useNavigate();\n\n    function handleClick () {\n        // props.setGroupId(props.server.id)\n        localStorage.setItem('groupId', props.server.id)\n        history(\"/group\")\n    }\n\n    if(props.server) {\n        return (\n            <div style={{ ...styles.card, left: `${props.center.x + coord.x}px`, top: `${props.center.y - coord.y}px` }} onClick={handleClick}>\n                <img className='group-card' alt=\"ok\" src={props.server.group_picture ? props.server.group_picture : 'http://www.ncenet.com/wp-content/uploads/2020/04/No-image-found.jpg'} style={{ width: '100%', height: '100%' }} title={props.server.name}/>\n            </div>\n        )\n    } else return null   \n}\n\nconst styles = {\n    card: {\n        margin: '0',\n        padding: '0',\n        width: '50px',\n        height: '50px',\n        borderRadius: '50%',\n        position: 'absolute',\n        left: '50%',\n        top: '50%',\n        transform: 'translate(-50%, -50%)',\n        backgroundColor: 'blue',\n    }\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card.js';\n\nclass Wheel extends React.Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            radius: 150,\n            cards: [],\n            theta: 0.0\n        }\n\n        this.temp_theta = 0.0;\n        this.anim_id = null;\n    }\n\n    componentDidMount() {\n        let center_of_wheel = {\n            x: parseFloat(this.wheel.style.width) / 2,\n            y: parseFloat(this.wheel.style.height) / 2\n        }\n        let temp_cards = [];\n\n        const servers = this.props.array\n        const setGroupId = this.props.setGroupId\n\n        for (let i = 0; i < 8; i++) {\n            temp_cards.push(\n                <Card radius={this.state.radius} radian_interval={(Math.PI / 4) * i} center={center_of_wheel} key={`card_${i}`} server={servers[i]} setGroupId={setGroupId}/>\n            );\n        }\n\n        this.setState({ cards: temp_cards });\n    }\n\n\n\n    handle_scroll = event => {\n        clearTimeout(this.anim_id);\n        this.wheel.style.transform = `translate(-50%, -50%) rotate(${this.temp_theta + (event.deltaY * 0.5)}deg)`;\n        this.temp_theta += (event.deltaY * 0.5);\n\n        this.anim_id = setTimeout(() => {\n            this.setState({ theta: this.temp_theta });\n        }, 150);\n    }\n\n    render() {\n        return (\n            <div onMouseEnter={() => this.props.blockScroll()} onMouseLeave={() => this.props.allowScroll()} onWheel={this.handle_scroll} ref={ref_id => this.wheel = ref_id} style={styles.wheel}>\n                {this.state.cards}\n            </div>\n        )\n\n    }\n}\n\nconst styles = {\n    wheel: {\n        // margin: '0',\n        marginTop: '300px',\n        marginBottom: '270px',\n        padding: '0',\n        // top: '50%',\n        left: '50%',\n        position: 'relative',\n        transform: 'translate(-50%, -50%)',\n        height: '100px',\n        width: '100px',\n        // backgroundColor: 'red',\n        backgroundImage: `url('https://images.unsplash.com/photo-1464802686167-b939a6910659?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1700&q=80')`,\n        backgroundAttachment: 'fixed',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n        borderRadius: '50px'\n    }\n}\n\nexport default Wheel;","import Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport { useState } from 'react'\nimport { useNavigate } from 'react-router-dom';\n\nfunction FindCreateGroup({show, setShow}){\n\n    const [searchGroup, setSearchGroup] = useState('')\n    const [formData, setFormData] = useState({\n        name: '',\n        group_picture: ''\n    })\n\n    let history = useNavigate()\n\n    const handleClose = () =>{\n        setShow(false)\n        setSearchGroup('')\n        setFormData({\n            name: '',\n            group_picture: ''\n        })\n    }\n\n    const handleFormChange = (e) =>{\n        setFormData({\n            ...formData,\n            [e.target.id]: e.target.value\n        })\n    }\n\n    const handleGroupSearch = () => {\n        fetch(`/search_groups/${searchGroup}`).then(res =>{\n            if(res.ok){\n                res.json().then(data =>{\n                    localStorage.setItem('groupId', data.id)\n                    setSearchGroup('')\n                    setFormData({\n                        name: '',\n                        group_picture: ''\n                    })\n                    setShow(false)\n                    history('/group')\n                })\n            }else{\n                res.json().then(errors =>{\n                    alert(errors.error)\n                    setSearchGroup('')\n                })\n            }\n        })\n    }\n\n    const handleGroupCreate = (e) => {\n        e.preventDefault()\n        const configObj = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(formData)\n        }\n\n        fetch('/groups', configObj).then(res => {\n            if(res.ok){\n                res.json().then(data => {\n                    localStorage.setItem('groupId', data.id)\n                    setSearchGroup('')\n                    setFormData({\n                        name: '',\n                        group_picture: ''\n                    })\n                    setShow(false)\n                    history('/group')\n                })\n            }else{\n                res.json().then(errors => {\n                    console.log(errors)\n                    alert(errors.errors)\n                })\n            }\n        })\n    }\n\n    return(\n        <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n            <Modal.Title>Find/Create Group</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n            <Form.Label htmlFor=\"titleSearch\" style={{marginTop: 5, marginLeft: 10}}>Search by Group:</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        id=\"titleSearch\"\n                        aria-describedby=\"titleBlock\"\n                        value={searchGroup}\n                        onChange={(e) => setSearchGroup(e.target.value)}\n                        placeholder=\"Group Name\"\n                    />\n                    <Button style={{marginTop: 10}} onClick={handleGroupSearch}>Search</Button>\n                    <br/>\n                    <br/>\n                <Form onSubmit={handleGroupCreate}>\n            <Form.Label htmlFor=\"titleCreate\" style={{marginTop: 5, marginLeft: 10}}>Create a New Group:</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        id=\"name\"\n                        aria-describedby=\"titleBlock\"\n                        value={formData.name}\n                        onChange={handleFormChange}\n                        placeholder=\"Group Name\"\n                    />\n            <Form.Label htmlFor=\"titleImage\" style={{marginTop: 5, marginLeft: 10}}>Group Photo:</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        id=\"group_picture\"\n                        aria-describedby=\"titleBlock\"\n                        value={formData.group_picture}\n                        onChange={handleFormChange}\n                        placeholder=\"Image URL\"\n                    />\n            <Button variant=\"success\" type=\"submit\" style={{marginTop: 10}}>\n                Create\n            </Button>\n            </Form>\n            </Modal.Body>\n        </Modal>\n    )\n}\n\nexport default FindCreateGroup","import { useRef } from 'react';\n\nconst safeDocument = typeof document !== 'undefined' ? document : {};\n\n/**\n * Usage:\n * const [blockScroll, allowScroll] = useScrollBlock();\n */\nexport default () => {\n  const scrollBlocked = useRef();\n  const html = safeDocument.documentElement;\n  const { body } = safeDocument;\n  const groupDiv = document.getElementsByClassName('wheel-container')\n\n  const blockScroll = (setScrollBool) => {\n    if (!body || !body.style || scrollBlocked.current) return;\n\n    const scrollBarWidth = window.innerWidth - html.clientWidth;\n    const bodyPaddingRight =\n      parseInt(window.getComputedStyle(body).getPropertyValue(\"padding-right\")) || 0;\n\n    /**\n     * 1. Fixes a bug in iOS and desktop Safari whereby setting\n     *    `overflow: hidden` on the html/body does not prevent scrolling.\n     * 2. Fixes a bug in desktop Safari where `overflowY` does not prevent\n     *    scroll if an `overflow-x` style is also applied to the body.\n     */\n    html.style.position = 'relative'; /* [1] */\n    html.style.overflow = 'hidden'; /* [2] */\n    body.style.position = 'relative'; /* [1] */\n    body.style.overflow = 'hidden'; /* [2] */\n    body.style.paddingRight = `${bodyPaddingRight + scrollBarWidth}px`;\n    // groupDiv.style.paddingRight = `${bodyPaddingRight + scrollBarWidth}px`\n    setScrollBool(`${bodyPaddingRight + scrollBarWidth}px`)\n\n    scrollBlocked.current = true;\n  };\n\n  const allowScroll = (setScrollBool) => {\n    if (!body || !body.style || !scrollBlocked.current) return;\n\n    html.style.position = '';\n    html.style.overflow = '';\n    body.style.position = '';\n    body.style.overflow = '';\n    body.style.paddingRight = '';\n\n    setScrollBool(false)\n\n    scrollBlocked.current = false;\n  };\n\n  return [blockScroll, allowScroll];\n};","import {useState, useEffect} from 'react'\nimport UserProfile from './UserProfile';\nimport Wheel from './Wheel'\nimport FindCreateGroup from './FindCreateGroup'\nimport CalendarTodayTwoToneIcon from '@mui/icons-material/CalendarTodayTwoTone';\nimport {Link} from 'react-router-dom'\nimport useScrollBlock from './useScrollBlock'\n\nfunction HomePage({setCurrentUser, currentUser, setGroupId}){\n\n    const [allGroups, setAllGroups] = useState([])\n    const [groupModal, setGroupModal] = useState(false)\n    const [blockScroll, allowScroll] = useScrollBlock();\n    const [scrollBool, setScrollBool] = useState('test')\n    const [show, setShow] = useState(false);\n    const [userName, setUserName] = useState(currentUser.username)\n    const [profPic, setProfPic] = useState(currentUser.profile_picture)\n\n    const handleShow = () => setShow(true);\n\n    useEffect(() => {\n        fetch('/my_total_groups')\n        .then(res => res.json())\n        .then(data =>{\n            setAllGroups(data.all_groups)\n        })\n    }, [])\n\n    const handleLogout = () => {\n        setCurrentUser(null)\n        fetch('/logout', { method: 'DELETE' })\n    }\n\n    const systems = allGroups.map(collection => <Wheel blockScroll={() => blockScroll(setScrollBool)} allowScroll={() => allowScroll(setScrollBool)} key={collection[0].name} array={collection} setGroupId={setGroupId}/>)\n    \n    return(\n        <div className=\"home-div\">\n            <div className=\"home-nav\">\n                <Link to=\"/calendar\" style={{ textDecoration: 'none', marginLeft: 20}}>\n                    <CalendarTodayTwoToneIcon color='error' fontSize='large'/>\n                </Link>\n                <button onClick={handleLogout} style={{float: 'right', marginRight: 10, height: '30px'}}>Logout</button>\n            </div>\n            <div className=\"home-prof\">\n                <img className=\"prof-pic\" src={profPic} onClick={handleShow} alt=\"Profile\"/>\n                <h2>Welcome {userName}!</h2>\n            </div>\n            <button className='create-group-button' onClick={() => setGroupModal(true)}>Discover and Create</button>\n            <FindCreateGroup show={groupModal} setShow={setGroupModal}/>\n            <div className='scroll-bs'>\n            <div className=\"wheel-container\" >\n             {systems}\n            </div>\n            <UserProfile show={show} setShow={setShow} currentUser={currentUser} setCurrentUser={setCurrentUser} setUserName={setUserName} setProfPic={setProfPic}/>\n            </div>\n        </div>\n    )\n}\n\nexport default HomePage\n","import Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport { useState } from 'react'\nimport TimePicker from 'react-bootstrap-time-picker';\nimport { GithubPicker } from 'react-color';\n\nfunction AddEventForm({showAdd, setShowAdd, currentUser, handleNewEventSubmit, adminGroups}){\n\n    const [formData, setFormData] = useState({\n        user_id: currentUser.id,\n        group_id: null,\n        title: '',\n        start: '',\n        end: '',\n        desc: '',\n        all_day: false,\n        color: 'blue'\n    })\n    const [multiDay, setMultiDay] = useState(false)\n    const [startTime, setStartTime] = useState('')\n    const [endTime, setEndTime] = useState('')\n    const [isGroup, setIsGroup] = useState(false)\n\n      const handleClose = () => {\n        setShowAdd(false);\n        setMultiDay(false);\n        setIsGroup(false)\n        setStartTime(0)\n        setEndTime(0)\n        setFormData({\n            user_id: currentUser.id,\n            group_id: null,\n            title: '',\n            start: '',\n            end: '',\n            desc: '',\n            all_day: false,\n            color: 'blue'\n        })\n      }\n\n      const handleSubmit = (e) => {\n        e.preventDefault()\n        handleNewEventSubmit(formData)\n    \n        setShowAdd(false);\n        setMultiDay(false);\n        setIsGroup(false)\n        setStartTime(0)\n        setEndTime(0)\n        setFormData({\n            user_id: currentUser.id,\n            group_id: null,\n            title: '',\n            start: '',\n            end: '',\n            desc: '',\n            all_day: false,\n            color: 'blue'\n        })\n      }\n\n\n    const handleFormChange = (e) => {\n\n\n        if(!e.target){\n            setFormData({\n                ...formData,\n                color: e.hex\n            })\n        }else if(e.target.id === \"allDay\"){\n            setFormData({\n                ...formData,\n                all_day: !formData.all_day\n            })\n        }else if(e.target.id === \"multiDay\"){\n            setMultiDay(!multiDay)\n            setStartTime(0)\n            setEndTime(0)\n        }else if(e.target.id === \"start\"){\n            const startDay = new Date(e.target.value)\n            startDay.setHours(0)\n            const endDay = new Date(e.target.value)\n            endDay.setHours(0)\n            startDay.setDate(startDay.getDate() + 1)\n            endDay.setDate(endDay.getDate() + 1)\n            setFormData({\n                ...formData,\n                start: startDay,\n                end: endDay\n            })\n        }else if(e.target.id === \"end\"){\n            const endDay = new Date(e.target.value)\n            endDay.setDate(endDay.getDate() + 1)\n            setFormData({\n                ...formData,\n                end: endDay\n            })\n        }else if(e.target.id === \"start_time\"){\n            const inputTime = parseInt(e.target.value, 10)\n            const currentDay = formData.start\n            const endDay = formData.end\n            const timeInHours = (inputTime / 60 / 60)\n            if(timeInHours % 1 === 0.5){\n                currentDay.setHours(timeInHours, 30)\n                setFormData({\n                    ...formData,\n                    start: currentDay\n                })\n                if(inputTime > endTime){\n                    endDay.setHours(timeInHours, 30)\n                    setFormData({\n                        ...formData,\n                        end: endDay\n                    })\n                }\n            }else{\n                currentDay.setHours(timeInHours, 0)\n                setFormData({\n                    ...formData,\n                    start: currentDay\n                })\n                if(inputTime > endTime){\n                    endDay.setHours(timeInHours, 0)\n                    setFormData({\n                        ...formData,\n                        end: endDay\n                    })\n                }\n            }\n        }else if(e.target.id === \"end_time\"){\n            let inputTime = parseInt(e.target.value, 10)\n            if (inputTime < startTime){\n                inputTime = startTime\n            }\n            const startRef = formData.start.getTime()\n            const currentDay = new Date(startRef)\n            const timeInHours = (inputTime / 60 / 60)\n            if(timeInHours % 1 === 0.5){\n                currentDay.setHours(timeInHours, 30)\n                setFormData({\n                    ...formData,\n                    end: currentDay\n                })\n            }else{\n                currentDay.setHours(timeInHours, 0)\n                setFormData({\n                    ...formData,\n                    end: currentDay\n                })\n        }\n        }else if(e.target.id === 'personalEvent'){\n            setIsGroup(!isGroup)\n            setFormData({\n                ...formData,\n                group_id: null\n            })\n        }else if(e.target.id === 'groupEvent'){\n            setIsGroup(!isGroup)\n        }else if(e.target.id === 'group'){\n            setFormData({\n                ...formData,\n                group_id: parseInt(e.target.value, 10)\n            })\n        }else{\n            setFormData({\n                ...formData,\n                [e.target.id]: e.target.value\n            })\n        }\n    }\n\n\n    const groupOptions = adminGroups.map(group => <option value={group.id} key={group.id}>{group.name}</option>)\n\n    const handleStartTime = (e) => {\n        setStartTime(e)\n        if (e > endTime){\n            setEndTime(e)\n        }\n    }\n\n    const handleEndTime = (e) => {\n        if (e > startTime){\n            setEndTime(e)\n        }else{\n            setEndTime(startTime)\n        }\n    }\n\n    let eventLength\n\n    if(formData.all_day){\n        eventLength = null\n    }else if(multiDay){\n        eventLength = <>\n        <Form.Label style={{ marginLeft: 10, marginTop: 5 }}>End Date:</Form.Label>\n        <Form.Control id=\"end\" type=\"date\" name=\"end\" placeholder=\"End Date\" />\n        </>\n    }else if(formData.start !== ''){\n        eventLength = \n        <>\n        <Form.Label style={{ marginLeft: 10, marginTop: 5 }}>Start:</Form.Label>\n        <TimePicker id=\"start_time\" start=\"00:00\" end=\"23:30\" step={30} style={{ marginTop: -2 }} onChange={(e) => handleStartTime(e)} value={startTime}/>\n        <Form.Label style={{ marginLeft: 10, marginTop: 5 }}>End:</Form.Label>\n        <TimePicker id='end_time' start=\"00:00\" end=\"23:30\" step={30} style={{ marginTop: -2 }} onChange={(e) => handleEndTime(e)} \n        value={endTime}/>\n        </>\n    }\n\n    return(\n        <Modal show={showAdd} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>New Event</Modal.Title>\n            </Modal.Header>\n            <Form onSubmit={(e) => handleSubmit(e)}>\n            <Form.Group style={{padding: 10}} onChange={handleFormChange}>\n                    <Form.Label htmlFor=\"title\" style={{marginTop: 5, marginLeft: 10}}>Event Title:</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        id=\"title\"\n                        aria-describedby=\"titleBlock\"\n                        value={formData.title}\n                        onChange={handleFormChange}\n                    />\n                    <Form.Label htmlFor=\"desc\" style={{marginTop: 5, marginLeft: 10}}>Description:</Form.Label>\n                    <Form.Text id=\"optionalDesc\" muted style={{marginLeft: 5}}>\n                        (optional)\n                    </Form.Text>\n                    <Form.Control\n                        type=\"text\"\n                        id=\"desc\"\n                        aria-describedby=\"descriptionBlock\"\n                        value={formData.desc}\n                        onChange={handleFormChange}\n                    />\n                    <Form.Label htmlFor=\"color\" style={{marginTop: 5, marginLeft: 10}}>Color:</Form.Label>\n                    <GithubPicker id='color' onChangeComplete={handleFormChange} color={formData.color} width=\"213px\"/>\n                    <Form.Label style={{marginLeft: 10, marginTop: 5}}>{multiDay ? \"Stary Date:\" : \"Date:\"}</Form.Label>\n                    <Form.Control id=\"start\" type=\"date\" name=\"start\" placeholder=\"Start Date\"/>\n                    {multiDay ?\n                    <Form.Check\n                    inline\n                    type=\"switch\"\n                    id=\"allDayDis\"\n                    label=\"All Day\"\n                    disabled\n                    />\n                    :\n                    <Form.Check\n                    inline\n                    type=\"switch\"\n                    id=\"allDay\"\n                    label=\"All Day\"\n                    // onChange={(e) => handleAllDay(e)}\n                    // value={formData.allDay}\n                    />}\n                    {formData.all_day ?\n                    <Form.Check\n                    inline\n                    type=\"switch\"\n                    id=\"multiDayDis\"\n                    label=\"Multiple Days\"\n                    disabled\n                    />\n                    :\n                    <Form.Check\n                    inline\n                    type=\"switch\"\n                    id=\"multiDay\"\n                    label=\"Multiple Days\"\n                    // onChange={(e) => handleMultiDay(e)}\n                    />}\n                    <br/>\n                    {eventLength}\n                    <Form.Check\n                        inline\n                        label=\"Personal\"\n                        name=\"type\"\n                        type=\"radio\"\n                        id='personalEvent'\n                        // onChange={handleRadio}\n                        defaultChecked\n                    />\n                    <Form.Check\n                        inline\n                        label=\"Group\"\n                        name=\"type\"\n                        type=\"radio\"\n                        id='groupEvent'\n                        // onChange={handleRadio}\n                    />\n                    {isGroup ? <Form.Select id=\"group\" aria-label=\"Select Group\" style={{marginTop: 5}}>\n                        <option>Select Group</option>\n                        {groupOptions}\n                    </Form.Select> : null}\n            \n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                Close\n                </Button>\n                <Button variant=\"success\" type=\"submit\">\n                Add\n                </Button>\n            </Modal.Footer>\n            </Form.Group>\n            </Form>\n        </Modal>\n    )\n}\n\nexport default AddEventForm","import Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport { useState } from 'react'\nimport TimePicker from 'react-bootstrap-time-picker';\nimport { GithubPicker } from 'react-color';\n\nfunction EventDetails({show, setShow, event, handleEditSubmit, currentUser, handleDeleteEvent}){\n    const [showEdit, setShowEdit] = useState(false)\n    const [formData, setFormData] = useState({\n        user_id: currentUser.id,\n        group_id: null,\n        title: '',\n        start: '',\n        end: '',\n        desc: '',\n        all_day: false,\n        color: 'blue'\n  })\n  const [multiDay, setMultiDay] = useState(false)\n  const [startTime, setStartTime] = useState('')\n  const [endTime, setEndTime] = useState('')\n  const [isGroup, setIsGroup] = useState(false)\n  const [showDelete, setShowDelete] = useState(false)\n  const [editDate, setEditDate] = useState(false)\n\n    const handleEditClose = () => {\n      setShowEdit(false);\n      setMultiDay(false);\n      setIsGroup(false)\n      setStartTime(0)\n      setEndTime(0)\n      setEditDate(false)\n      setFormData({\n          user_id: currentUser.id,\n          group_id: null,\n          title: '',\n          start: '',\n          end: '',\n          desc: '',\n          all_day: false,\n          color: 'blue'\n      })\n    }\n\n    const handleSubmit = (e) => {\n      e.preventDefault()\n      handleEditSubmit(event, formData)\n  \n      setShowEdit(false);\n      setMultiDay(false);\n      setIsGroup(false)\n      setStartTime(0)\n      setEndTime(0)\n      setEditDate(false)\n      setFormData({\n          user_id: currentUser.id,\n          group_id: null,\n          title: '',\n          start: '',\n          end: '',\n          desc: '',\n          all_day: false,\n          color: 'blue'\n      })\n    }\n\n\n  const handleFormChange = (e) => {\n\n    if(!e.target){\n        setFormData({\n            ...formData,\n            color: e.hex\n        })\n    }else if(e.target.id === \"allDay\"){\n        setFormData({\n            ...formData,\n            all_day: !formData.all_day\n        })\n      }else if(e.target.id === \"multiDay\"){\n          setMultiDay(!multiDay)\n          setStartTime(0)\n          setEndTime(0)\n      }else if(e.target.id === \"start\"){\n          const startDay = new Date(e.target.value)\n          startDay.setHours(0)\n          const endDay = new Date(e.target.value)\n          endDay.setHours(0)\n          startDay.setDate(startDay.getDate() + 1)\n          endDay.setDate(endDay.getDate() + 1)\n          setFormData({\n              ...formData,\n              start: startDay,\n              end: endDay\n          })\n      }else if(e.target.id === \"end\"){\n          const endDay = new Date(e.target.value)\n          endDay.setDate(endDay.getDate() + 1)\n          setFormData({\n              ...formData,\n              end: endDay\n          })\n      }else if(e.target.id === \"start_time\"){\n          const inputTime = parseInt(e.target.value, 10)\n          const currentDay = formData.start\n          const endDay = formData.end\n          const timeInHours = (inputTime / 60 / 60)\n          if(timeInHours % 1 === 0.5){\n              currentDay.setHours(timeInHours, 30)\n              setFormData({\n                  ...formData,\n                  start: currentDay\n              })\n              if(inputTime > endTime){\n                  endDay.setHours(timeInHours, 30)\n                  setFormData({\n                      ...formData,\n                      end: endDay\n                  })\n              }\n          }else{\n              currentDay.setHours(timeInHours, 0)\n              setFormData({\n                  ...formData,\n                  start: currentDay\n              })\n              if(inputTime > endTime){\n                  endDay.setHours(timeInHours, 0)\n                  setFormData({\n                      ...formData,\n                      end: endDay\n                  })\n              }\n          }\n      }else if(e.target.id === \"end_time\"){\n          let inputTime = parseInt(e.target.value, 10)\n          if (inputTime < startTime){\n              inputTime = startTime\n          }\n          const startRef = formData.start.getTime()\n          const currentDay = new Date(startRef)\n          const timeInHours = (inputTime / 60 / 60)\n          if(timeInHours % 1 === 0.5){\n              currentDay.setHours(timeInHours, 30)\n              setFormData({\n                  ...formData,\n                  end: currentDay\n              })\n          }else{\n              currentDay.setHours(timeInHours, 0)\n              setFormData({\n                  ...formData,\n                  end: currentDay\n              })\n      }\n      }else if(e.target.id === 'personalEvent'){\n          setIsGroup(!isGroup)\n          setFormData({\n              ...formData,\n              group_id: null\n          })\n      }else if(e.target.id === 'groupEvent'){\n          setIsGroup(!isGroup)\n      }else if(e.target.id === 'group'){\n          setFormData({\n              ...formData,\n              group_id: parseInt(e.target.value, 10)\n          })\n      }else{\n          setFormData({\n              ...formData,\n              [e.target.id]: e.target.value\n          })\n      }\n  }\n\n  const handleStartTime = (e) => {\n    setStartTime(e)\n    if (e > endTime){\n        setEndTime(e)\n    }\n}\n\nconst handleEndTime = (e) => {\n    if (e > startTime){\n        setEndTime(e)\n    }else{\n        setEndTime(startTime)\n    }\n}\n\n  let eventLength\n\n    if(formData.all_day){\n        eventLength = null\n    }else if(multiDay){\n        eventLength = <>\n        <Form.Label style={{ marginLeft: 10, marginTop: 5 }}>End Date:</Form.Label>\n        <Form.Control id=\"end\" type=\"date\" name=\"end\" placeholder=\"End Date\" />\n        </>\n    }else if(formData.start !== ''){\n        eventLength = \n        <>\n        <Form.Label style={{ marginLeft: 10, marginTop: 5 }}>Start:</Form.Label>\n        <TimePicker id=\"start_time\" start=\"00:00\" end=\"23:30\" step={30} style={{ marginTop: -2 }} onChange={(e) => handleStartTime(e)} value={startTime}/>\n        <Form.Label style={{ marginLeft: 10, marginTop: 5 }}>End:</Form.Label>\n        <TimePicker id='end_time' start=\"00:00\" end=\"23:30\" step={30} style={{ marginTop: -2 }} onChange={(e) => handleEndTime(e)} \n        value={endTime}/>\n        </>\n    }\n\n    const handleClose = () => setShow(false)\n\n    const handleDeleteClose = () => setShowDelete(false)\n\n    const handleEditClick = () => {\n        setFormData({\n            user_id: currentUser.id,\n            group_id: event.group_id,\n            title: event.title,\n            start: event.start,\n            end: event.end,\n            desc: event.desc,\n            all_day: event.all_day,\n            color: event.color\n        })\n        setShow(false)\n        setShowEdit(true)\n    }\n\n    const handleDeleteClick = () => {\n      setShow(false)\n      setShowDelete(true)\n    }\n\n    const handleDelete = () => {\n      handleDeleteEvent(event)\n      setShowDelete(false)\n    }\n\n    const handleEditDate = () => {\n        setFormData({\n            ...formData,\n            all_day: false\n        })\n        setEditDate(true)\n    }\n \n    return(\n        <>\n        <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>{event.title}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <h6>{event.desc}</h6>\n            <h6>Start: {event.start.toUTCString().slice(0, -7)}</h6>\n            <h6>End: {event.end.toUTCString().slice(0, -7)}</h6>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleEditClick}>\n            Edit\n          </Button>\n          <Button variant=\"danger\" onClick={handleDeleteClick}>\n            Delete\n          </Button>\n        </Modal.Footer>\n        </Modal>\n\n        <Modal show={showDelete} onHide={handleDeleteClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Are you sure you wish to delete {event.title}?</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Button variant=\"secondary\" onClick={handleDeleteClose}>\n            Cancel\n          </Button>\n          <Button variant=\"danger\" onClick={handleDelete} style={{float: 'right'}}>\n            Delete\n          </Button>\n        </Modal.Body>\n        </Modal>\n\n\n        <Modal show={showEdit} onHide={handleEditClose}>\n        <Modal.Header closeButton>\n                <Modal.Title>Edit {event.title}</Modal.Title>\n            </Modal.Header>\n            <Form onSubmit={(e) => handleSubmit(e)}>\n            <Form.Group style={{padding: 10}} onChange={handleFormChange}>\n                    <Form.Label htmlFor=\"title\" style={{marginTop: 5, marginLeft: 10}}>Event Title:</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        id=\"title\"\n                        aria-describedby=\"titleBlock\"\n                        value={formData.title}\n                        onChange={handleFormChange}\n                    />\n                    <Form.Label htmlFor=\"desc\" style={{marginTop: 5, marginLeft: 10}}>Description:</Form.Label>\n                    <Form.Text id=\"optionalDesc\" muted style={{marginLeft: 5}}>\n                        (optional)\n                    </Form.Text>\n                    <Form.Control\n                        type=\"text\"\n                        id=\"desc\"\n                        aria-describedby=\"descriptionBlock\"\n                        value={formData.desc}\n                        onChange={handleFormChange}\n                    />\n                    <Form.Label htmlFor=\"color\" style={{marginTop: 5, marginLeft: 10}}>Color:</Form.Label>\n                    <GithubPicker id='color' onChangeComplete={handleFormChange} color={formData.color} width=\"213px\"/>\n                    {editDate ? null : <Button style={{marginTop: 8}} onClick={() => handleEditDate()}>Edit Date(s)</Button>}\n                    <br/>\n                    {editDate ? <>\n                    <Form.Label style={{marginLeft: 10, marginTop: 5}}>{multiDay ? \"Stary Date:\" : \"Date:\"}</Form.Label>\n                    <Form.Control id=\"start\" type=\"date\" name=\"start\" placeholder=\"Start Date\"/>\n                    {multiDay ?\n                    <Form.Check\n                    inline\n                    type=\"switch\"\n                    id=\"allDayDis\"\n                    label=\"All Day\"\n                    disabled\n                    />\n                    :\n                    <Form.Check\n                    inline\n                    type=\"switch\"\n                    id=\"allDay\"\n                    label=\"All Day\"\n                    // onChange={(e) => handleAllDay(e)}\n                    // value={formData.allDay}\n                    />}\n                    {formData.all_day ?\n                    <Form.Check\n                    inline\n                    type=\"switch\"\n                    id=\"multiDayDis\"\n                    label=\"Multiple Days\"\n                    disabled\n                    />\n                    :\n                    <Form.Check\n                    inline\n                    type=\"switch\"\n                    id=\"multiDay\"\n                    label=\"Multiple Days\"\n                    // onChange={(e) => handleMultiDay(e)}\n                    />}\n                    <br/>\n                    {eventLength}\n                    </> : null}\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleEditClose}>\n                Cancel\n                </Button>\n                <Button variant=\"success\" type=\"submit\">\n                Confirm\n                </Button>\n            </Modal.Footer>\n            </Form.Group>\n            </Form>\n        </Modal>\n        </>\n    )\n}\n\nexport default EventDetails","import { Calendar, momentLocalizer, Views } from 'react-big-calendar';\nimport moment from 'moment';\n// import 'react-big-calendar/lib/css/react-big-calendar.css';\nimport {useState, useEffect} from 'react'\nimport 'react-big-calendar/lib/sass/styles.scss';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport {Link} from 'react-router-dom'\nimport SvgIcon from '@mui/material/SvgIcon';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nimport Fab from '@mui/material/Fab';\nimport AddEventForm from './AddEventForm';\nimport EventDetails from './EventDetails'\n\nconst localizer = momentLocalizer(moment)\n\nfunction DisplayCalendar({currentUser}){\n\n    const [selected, setSelected] = useState(null);\n    const [allEvents, setAllEvents] = useState([]);\n    const [personalEvents, setPersonalEvents] = useState([]);\n    const [groupEvents, setGroupEvents] = useState([]);\n    const [filterToggle, setFilterToggle] = useState(\"All\")\n    const [selectedEvents, setSelectedEvents] = useState([])\n    const [showAdd, setShowAdd] = useState(false);\n    const [showDetails, setShowDetails] = useState(false);\n    const [adminGroups, setAdminGroups] = useState([])\n\n\n    useEffect(() => {\n        fetch('/all_events')\n        .then(res => res.json())\n        .then(data =>{\n            const group = data.all_events.group\n            const personal = data.all_events.personal\n            const all = [...group, ...personal]\n            setGroupEvents(group)\n            setPersonalEvents(personal)\n            setAllEvents(all)\n            setSelectedEvents(all)\n            setAdminGroups(data.all_events.admins)\n        })\n      }, [])\n\n      \n    const handleFilterToggle = (e) => {\n        setFilterToggle(e.target.value)\n        if(e.target.value === \"All\"){\n            setSelectedEvents(allEvents)\n        }else if(e.target.value === \"Group\"){\n            setSelectedEvents(groupEvents)\n        }else if(e.target.value === \"Personal\"){\n            setSelectedEvents(personalEvents)\n        }\n    }\n\n    const handleSelected = (event) => {\n        setSelected(event);\n        setShowDetails(true)\n    }\n\n    const handleShowAdd = () => setShowAdd(true);\n    \n    const showEvents = selectedEvents.map(e => {\n        return({\n            ...e,\n            start: new Date(e.start),\n            end: new Date(e.end)\n        })\n    })\n\n    function HomeIcon(props) {\n        return (\n          <SvgIcon {...props}>\n            <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\n          </SvgIcon>\n        );\n      }\n\n    const eventStyleGetter = (event) => {\n        const style = {\n            backgroundColor: event.color\n        };\n        return {\n            style: style\n        };\n    }\n\n    const handleNewEventSubmit= (formData) => {\n  \n        const configObj = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(formData)\n        }\n\n\n        if(formData.group_id){\n            fetch('/group_events', configObj).then((resp) =>{ \n                if (resp.ok) {\n                    resp.json().then((data) => {\n                    setGroupEvents([...groupEvents, data])\n                    setAllEvents([...allEvents, data])\n                    if(filterToggle === 'All' || filterToggle === 'Group'){\n                        setSelectedEvents([...selectedEvents, data])\n                    }\n                    })\n                } else {\n                    resp.json().then((errors) => {\n                        alert(errors.errors);\n                    })\n                }\n            })\n        }else{\n            fetch('/personal_events', configObj).then((resp) =>{ \n                if (resp.ok) {\n                    resp.json().then((data) => {\n                    setPersonalEvents([...personalEvents, data])\n                    setAllEvents([...allEvents, data])\n                    if(filterToggle === 'All' || filterToggle === 'Personal'){\n                        setSelectedEvents([...selectedEvents, data])\n                    }\n                    })\n                } else {\n                    resp.json().then((errors) => {\n                        alert(errors.errors);\n                    })\n                }\n            })\n        }\n    }\n\n    const handleEditSubmit = (event, data) => {\n        const configObj = {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(data)\n        }\n\n        if(data.group_id){\n            fetch(`/group_events/${event.id}`, configObj).then(res => {\n                if(res.ok){\n                    res.json().then((data) => {\n                        const newGroupEvents = groupEvents.map(event => event.id === data.id ? data : event);\n                        const newAllEvents = allEvents.map(event => event.group_id && event.id === data.id ? data : event);\n                        setGroupEvents(newGroupEvents)\n                        setAllEvents(newAllEvents)\n                        if(filterToggle === 'All'){\n                            setSelectedEvents(newAllEvents);\n                        }else if(filterToggle === 'Group'){\n                            setSelectedEvents(newGroupEvents);\n                        }\n                    })\n                }else{\n                    res.json().then((errors) => {\n                        alert(errors.errors);\n                    })\n                }\n            })\n        }else{\n            fetch(`/personal_events/${event.id}`, configObj).then(res => {\n                if(res.ok){\n                    res.json().then((data) => {\n                        const newPersonalEvents = personalEvents.map(event => event.id === data.id ? data : event);\n                        const newAllEvents = allEvents.map(event => !event.group_id && event.id === data.id ? data : event);\n                        setPersonalEvents(newPersonalEvents)\n                        setAllEvents(newAllEvents)\n                        if(filterToggle === 'All'){\n                            setSelectedEvents(newAllEvents);\n                        }else if(filterToggle === 'Personal'){\n                            setSelectedEvents(newPersonalEvents);\n                        }\n                    })\n                }else{\n                    res.json().then((errors) => {\n                        alert(errors.errors);\n                    })\n                }\n            })\n        }\n    }\n\n\n    const handleDeleteEvent = (event) => {\n        if(event.group_id){\n            fetch(`/group_events/${event.id}`, { method: 'DELETE' }).then(res => {\n                if (res.ok) {\n                    const deletedAllArray = allEvents.filter(e => !e.group_id || e.id !== event.id)\n                    const deletedGroupArray = groupEvents.filter(e => e.id !== event.id)\n                    setGroupEvents(deletedGroupArray)\n                    setAllEvents(deletedAllArray)\n                    if(filterToggle === 'All'){\n                        setSelectedEvents(deletedAllArray)\n                    }else if(filterToggle === 'Group'){\n                        setSelectedEvents(deletedGroupArray)\n                    }\n                } else {\n                    res.json().then((errors) => {\n                        alert(errors.errors);\n                    })\n                }\n            })\n        }else{\n            fetch(`/personal_events/${event.id}`, { method: 'DELETE' }).then(res => {\n                if (res.ok) {\n                    const deletedAllArray = allEvents.filter(e => e.group_id || e.id !== event.id)\n                    const deletedPersonalArray = personalEvents.filter(e => e.id !== event.id)\n                    setPersonalEvents(deletedPersonalArray)\n                    setAllEvents(deletedAllArray)\n                    if(filterToggle === 'All'){\n                        setSelectedEvents(deletedAllArray)\n                    }else if(filterToggle === 'Personal'){\n                        setSelectedEvents(deletedPersonalArray)\n                    }\n                } else {\n                    res.json().then((errors) => {\n                        alert(errors.errors);\n                    })\n                }\n        })\n    }\n}\n\n    \n        return(\n            <div>\n                <br/>\n                <Link to=\"/\" style={{ textDecoration: 'none', position: 'absolute', marginLeft: 20 }}>\n                    <Fab color=\"active\" size=\"small\">\n                        <HomeIcon />\n                    </Fab>\n                </Link>\n                <Stack direction=\"row\" spacing={5} alignItems=\"center\" justifyContent=\"center\">\n                    <Button variant=\"contained\" color=\"success\" onClick={handleShowAdd}>\n                        New Event\n                    </Button>\n                    <ToggleButtonGroup color=\"primary\" value={filterToggle} exclusive onChange={(e) => handleFilterToggle(e)}>\n                        <ToggleButton value=\"All\">All</ToggleButton>\n                        <ToggleButton value=\"Group\">Group</ToggleButton>\n                        <ToggleButton value=\"Personal\">Personal</ToggleButton>\n                    </ToggleButtonGroup>\n                </Stack>\n                <br/>\n                <Calendar\n                localizer={localizer}\n                events={showEvents}\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                style={{ height: 900 }}\n                defaultView={Views.MONTH}\n                // backgroundEvents={myBackgroundEvents}\n                selected={selected}\n                onSelectEvent={handleSelected}\n                eventPropGetter={eventStyleGetter}\n                />\n                <AddEventForm showAdd={showAdd} setShowAdd={setShowAdd} currentUser={currentUser} handleNewEventSubmit={handleNewEventSubmit} adminGroups={adminGroups}/>\n                {selected ? <EventDetails show={showDetails} setShow={setShowDetails} event={selected} handleEditSubmit={handleEditSubmit} currentUser={currentUser} handleDeleteEvent={handleDeleteEvent}/> : null}\n            </div>\n        )\n}\n\nexport default DisplayCalendar\n","import Modal from \"react-bootstrap/Modal\";\nimport { useState } from \"react\"\n\nfunction UserList ({user}) {\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const [userData, setUserData] = useState(null);\n    function handleClick () {\n        fetch(`/users/${user.id}`)\n        .then(res => res.json())\n        .then(data => {setUserData(data)\n        console.log(data)})\n        setShow(true)\n    }\n    let serverList\n    if(userData) {\n        serverList = userData.all_groups.map(group => <li><img src={group.group_picture} className=\"group-prof-pic\" alt={group.name}/>{group.name}</li>)\n    }\n    return (\n        <div>\n            <div className=\"group-prof\" onClick={handleClick}>\n                <img src={user.profile_picture} className=\"group-prof-pic\" alt={user.username}/>\n                <div title={user.username}>{user.username}</div>\n            </div>\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <img src={user.profile_picture} className=\"group-prof-pic\" alt={user.username}/>\n                    <Modal.Title>{user.username}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>    \n                    <h5>Birthday: {user.birthday}</h5>\n                    <p>Bio: {user.bio}</p>\n                    <h6>Servers {user.username} is in:</h6>\n                    <ul> \n                        {/* <li>test</li> */}\n                        {serverList}\n                    </ul>\n                    \n                </Modal.Body>\n            </Modal>\n        </div>\n        \n    )\n}\n\nexport default UserList","import Modal from \"react-bootstrap/Modal\";\nimport { useState } from \"react\"\n\nfunction Message ({message, groupID}) {\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const [userData, setUserData] = useState();\n    function handleClick () {\n        fetch(`/users/${message.user.id}`)\n        .then(res => res.json())\n        .then(data => setUserData(data))\n        setShow(true)\n    }\n    let serverList\n    if(userData) {\n        serverList = userData.all_groups.map(group => <li><img src={group.group_picture} className=\"group-prof-pic\" alt={group.name}/>{group.name}</li>)\n    }\n    if(message.group.id == groupID || message.group_id == groupID) {\n        console.log(message)\n        return (\n            <>\n            <div className=\"user-text\" onClick={handleClick}>\n                <img className=\"group-prof-pic\" src={message.user.profile_picture}/>\n                <p className=\"text-text\">{message.user.username}: {message.message}</p>\n            </div>   \n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <img src={message.user.profile_picture} className=\"group-prof-pic\" alt={message.user.username}/>\n                    <Modal.Title>{message.user.username}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>    \n                    <h5>Birthday: {message.user.birthday}</h5>\n                    <p>Bio: {message.user.bio}</p>\n                    <h6>Servers {message.user.username} is in:</h6>\n                    <ul> \n                        {serverList}\n                    </ul>\n                    \n                </Modal.Body>\n            </Modal>\n        </>\n        )\n    } else return null\n    \n}\n\nexport default Message","import { useEffect, useState } from \"react\"\nimport UserList from \"./UserList\"\nimport TextField from '@mui/material/TextField';\nimport {Link} from 'react-router-dom'\nimport Fab from '@mui/material/Fab';\nimport SvgIcon from '@mui/material/SvgIcon';\nimport Button from '@mui/material/Button';\nimport Message from \"./Message\";\n\nfunction GroupPage ({currentUser}) {\n    const [groupData, setGroupData] = useState(null)\n    const [isJoined, setIsJoined] = useState(false)\n    const [messages, setMessages] = useState([])\n    const groupID = localStorage.getItem('groupId')\n    useEffect(() => {\n        fetch(`/groups/${groupID}`)\n            .then(res => res.json())\n            .then(data =>{\n                 setGroupData(data)\n                 setIsJoined(data.user_bool)\n            })\n    }, [])\n    const [value, setValue] = useState();\n\n    const handleChange = (event) => {\n        setValue(event.target.value);   \n    };\n    function handleSend (ev) {\n        if(ev.key === 'Enter') {\n            const messageObj = {\n                group_id: groupID,\n                message: ev.target.value,\n                user_id: currentUser.id\n            }\n            fetch(`/messages`, {\n                method: 'POST',\n                headers: {'Content-Type' : 'application/json'},\n                body: JSON.stringify(messageObj)\n            })\n            .then(res => res.json())\n            .then(data => {\n                setMessages([...messages, data])\n                setValue(\"\")\n            })\n        } \n    }\n\n    useEffect(() => {\n        fetch(`/messages`)\n        .then(res => res.json())\n        .then(data => {\n            setMessages(data)\n        })\n    }, [])\n    function HomeIcon(props) {\n        return (\n          <SvgIcon {...props}>\n            <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\n          </SvgIcon>\n        );\n    }\n\n    const handleJoin = () => {\n\n        const configObj = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                user_id: currentUser.id,\n                group_id: groupID\n            })\n        }\n\n        fetch('/joined_groups', configObj).then(res => {\n            if(res.ok){\n                setIsJoined(true)\n            }else{\n                res.json().then((errors => {\n                    console.log(errors)\n                }))\n            }\n        })\n    }\n\n    if(groupData) {\n        const userArray = groupData.all_users?.map(user => <UserList user={user} key={user.id}/>)\n        const messageArray = messages.map(message => <Message currentUser={currentUser} message={message} groupID={groupID}/>)\n        return(\n            <div>\n                <Link to=\"/\" style={{ textDecoration: 'none', position: 'absolute', marginLeft: 20 }}>\n                    <Fab color=\"active\" size=\"small\">\n                        <HomeIcon />\n                    </Fab>\n                </Link>\n                <h1 style={{margin: 'auto', textAlign: 'center'}}>{groupData.name}</h1>\n                {userArray}\n                {messageArray}\n                <div>\n                    {isJoined ? \n                    <TextField\n                    fullWidth\n                    id=\"outlined-multiline-flexible\"\n                    label=\"Send Message\"\n                    multiline\n                    maxRows={1}\n                    value={value}\n                    onChange={handleChange}\n                    onKeyPress={handleSend}\n                    style={{position: 'fixed', bottom: 0, width: '100%'}}\n                    />\n                    : \n                    <Button variant=\"contained\" onClick={handleJoin}>Join Group</Button>\n                    }\n                </div>\n            </div>\n        )\n    } else return null   \n}\n\nexport default GroupPage\n","import { Routes, Route } from \"react-router-dom\";\nimport HomePage from './HomePage'\nimport DisplayCalendar from './DisplayCalendar'\nimport { useState } from \"react\";\nimport GroupPage from \"./GroupPage\";\n\n\nfunction LoggedIn({ setCurrentUser, currentUser }){\n    const [groupId, setGroupId] = useState()\n\n    return(\n        <Routes>\n            <Route path='/' element={<HomePage setCurrentUser={setCurrentUser} currentUser={currentUser} setGroupId={setGroupId}/>} />\n            <Route path='/calendar' element={<DisplayCalendar currentUser={currentUser}/>}/>\n            <Route path='/group' element={<GroupPage groupId={groupId} currentUser={currentUser}/>}/>\n        </Routes>\n    )\n}\n\nexport default LoggedIn","import Button from 'react-bootstrap/Button'\nimport { useNavigate } from 'react-router-dom';\n\nfunction LandingPage(){\n    let history = useNavigate()\n\n    function handleLogin () {\n        console.log(\"login\")\n        history('/login')\n    }\n    function handleSignUp () {\n        console.log(\"signup\")\n        history('/signup')\n    }\n\n\n    return(\n        <div >\n            <h1 className=\"planit-title\">PLANIT</h1>\n            <div className=\"login-buttons\">\n            <Button onClick={handleLogin} style={{marginRight: '5%'}}>Login</Button>\n            <Button variant=\"info\" onClick={handleSignUp} style={{marginLeft: '5%'}}>Signup</Button>\n            </div>\n            {/* <Button onClick={handleLogin} style={{marginTop: '65vh', marginLeft: '37%'}}>Login</Button>\n            <Button variant=\"info\" onClick={handleSignUp} style={{marginTop: '65vh', marginLeft: '20%'}}>Signup</Button> */}\n        </div>\n    )\n}\n\nexport default LandingPage","import Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n\nfunction Login({ setCurrentUser }){\n\n\tconst [formData, setFormData] = useState({\n\t\tusername: '',\n\t\tpassword: ''\n\t})\n\n  let history = useNavigate();\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault()\n\n\t\tconst configObj = {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t\tbody: JSON.stringify(formData)\n\t\t}\n\n\t\tfetch('/login', configObj).then((resp) =>{ \n\t\t\tif (resp.ok) {\n\t\t\t\tresp.json().then((user) => {\n          setCurrentUser(user)\n          history('/')\n        })\n\t\t\t  } else {\n          resp.json().then((errors) => {\n            alert(errors.error);\n          })\n\t\t\t  }\n\t\t})\n\n\t\tsetFormData({\n\t\t\tusername: '',\n\t\t\tpassword: ''\n\t\t})\n\t}\n\n\treturn(\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 20,\n            marginLeft: -9,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            position: 'absolute',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Log In\n          </Typography>\n          <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"username\"\n              label=\"Username\"\n              name=\"username\"\n              autoComplete=\"username\"\n\t\t\t  value={formData.username}\n\t\t\t  onChange={(e) => setFormData({...formData, username: e.target.value})}\n            style={{backgroundColor: '#dbdbdb', borderRadius: 10}}/>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n\t\t\t  value={formData.password}\n\t\t\t  onChange={(e) => setFormData({...formData, password: e.target.value})}\n        style={{backgroundColor: '#dbdbdb', borderRadius: 10}}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Log In\n            </Button>\n            <Grid container>\n              <Grid item>\n                <Link href=\"/signup\" variant=\"body2\" style={{color: '#ffffff', textDecoration: 'none'}}>\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n            <Grid container>\n              <Grid item>\n                <Link href=\"/\" variant=\"body2\" style={{color: '#ffffff', textDecoration: 'none'}}>\n                  {\"Home\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n\t)\n}\n\nexport default Login","import Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n\nfunction Signup({ setCurrentUser }) {\n\n  const [formData, setFormData] = useState({\n    username: '',\n    password: '',\n    password_confirmation: ''\n  })\n\n  let history = useNavigate()\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    const configObj = {\n      method: 'POST',\n      headers: { \n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    }\n\n    fetch('/signup', configObj).then((res) => {\n      if (res.ok) {\n        res.json().then((user) => {\n          console.log(user);\n          setCurrentUser(user);\n          history('/')\n        });\n      } else {\n        res.json().then((errors) => {\n         alert(errors.errors);\n        });\n      }\n    })\n\n    setFormData({\n      username: '',\n      password: '',\n      password_confirmation: ''\n    })\n  }\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value })\n  }\n\n  return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 18,\n            marginLeft: -15,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            position: 'absolute'\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  autoComplete=\"username\"\n                  name=\"username\"\n                  required\n                  fullWidth\n                  id=\"username\"\n                  label=\"Username\"\n                  onChange={(e) => handleChange(e)}\n                  value={formData.username}\n                  style={{backgroundColor: '#dbdbdb', borderRadius: 10}}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"password\"\n                  label=\"Password\"\n                  name=\"password\"\n                  autoComplete=\"new-password\"\n                  type=\"password\"\n                  onChange={(e) => handleChange(e)}\n                  value={formData.password}\n                  style={{backgroundColor: '#dbdbdb', borderRadius: 10}}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"password_confirmation\"\n                  label=\"Confirm Password\"\n                  type=\"password\"\n                  id=\"password_confirmation\"\n                  autoComplete=\"confirm-password\"\n                  onChange={(e) => handleChange(e)}\n                  value={formData.password_confirmation}\n                  style={{backgroundColor: '#dbdbdb', borderRadius: 10}}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Link href=\"/login\" variant=\"body2\" style={{color: '#ffffff', textDecoration: 'none'}}>\n                  Already have an account? Log in\n                </Link>\n              </Grid>\n            </Grid>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Link href=\"/\" variant=\"body2\" style={{color: '#ffffff', textDecoration: 'none'}}>\n                    Home\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n  );\n}\n\nexport default Signup","import { Routes, Route } from \"react-router-dom\";\nimport LandingPage from './LandingPage'\nimport Login from './Login'\nimport Signup from './Signup'\n\n\nfunction LoggedOut({setCurrentUser}){\n\n\n    return(\n        <div className=\"logged-out\">\n        <Routes>\n            <Route path='/' element={<LandingPage />}/>\n            <Route path='/login' element={<Login setCurrentUser={setCurrentUser}/>}/>\n            <Route path='/signup' element={<Signup setCurrentUser={setCurrentUser}/>}/>\n        </Routes>\n        </div>\n    )\n}\n\nexport default LoggedOut","import './App.css';\nimport { useState, useEffect } from 'react';\nimport LoggedIn from './components/LoggedIn'\nimport LoggedOut from './components/LoggedOut'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App() {\n\n  const [currentUser, setCurrentUser] = useState(null);\n  const [authenticated, setAuthenticated] = useState(false);\n\n  useEffect(() => {\n    fetch(\"/me\", {\n      credentials: \"include\",\n    }).then((res) => {\n      if (res.ok) {\n        res.json().then((user) => {\n          setCurrentUser(user);\n          setAuthenticated(true);\n        });\n      } else {\n        setAuthenticated(true);\n      }\n    });\n  }, []);\n\n  if (!authenticated) {\n    return <div></div>;\n  }\n\n  return (\n      <>\n        {currentUser ? (<LoggedIn setCurrentUser={setCurrentUser} currentUser={currentUser}/>) : (<LoggedOut setCurrentUser={setCurrentUser} currentUser={currentUser}/>)}\n      </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nconst theme = createTheme({\n});\n\nReactDOM.render(\n  <BrowserRouter>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}